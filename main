import cv2
import numpy as np
import os
import argparse


def extract_unique_frames(video_path, output_dir, threshold=30.0):
    """
    从视频中提取不重复的关键帧
    :param video_path: 视频文件路径
    :param output_dir: 输出目录
    :param threshold: 帧差异阈值（值越小越敏感）
    """
    # 确保输出目录存在
    os.makedirs(output_dir, exist_ok=True)

    # 打开视频文件
    cap = cv2.VideoCapture(video_path)
    if not cap.isOpened():
        print("错误：无法打开视频文件")
        return

    # 初始化变量
    prev_frame = None
    frame_count = 0
    saved_count = 0

    while True:
        ret, frame = cap.read()
        if not ret:
            break

        frame_count += 1

        # 转换为灰度图以简化比较
        gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
        gray = cv2.GaussianBlur(gray, (21, 21), 0)

        # 第一帧直接保存
        if prev_frame is None:
            prev_frame = gray
            output_path = os.path.join(output_dir, f"frame_{frame_count:06d}.jpg")
            cv2.imwrite(output_path, frame)
            saved_count += 1
            continue

        # 计算当前帧与前一帧的差异
        frame_diff = cv2.absdiff(prev_frame, gray)
        diff_score = np.sum(frame_diff) / float(prev_frame.size)

        # 如果差异大于阈值，保存当前帧
        if diff_score > threshold:
            output_path = os.path.join(output_dir, f"frame_{frame_count:06d}.jpg")
            cv2.imwrite(output_path, frame)
            prev_frame = gray
            saved_count += 1

    cap.release()
    print(f"处理完成：共处理 {frame_count} 帧，保存 {saved_count} 个独特帧")
    print(f"帧保存在: {os.path.abspath(output_dir)}")


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='视频关键帧提取工具')
    parser.add_argument('video', help='输入视频文件路径')
    parser.add_argument('output', help='输出目录路径')
    parser.add_argument('--threshold', type=float, default=30.0,
                        help='帧差异阈值 (默认: 30.0)')

    args = parser.parse_args()

    extract_unique_frames(args.video, args.output, args.threshold)
